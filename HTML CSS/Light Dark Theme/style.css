* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    --accent-color: orangered;
    --background-color: white;
    --text-color: black;
    --button-text-color: var( --background-color);
    --transition-delay: 1s;
    
    
    
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;

    background-color: var( --background-color);
    color: var( --text-color);
    transition: var( --transition-delay);


    overflow: hidden;

}

body.dark {
    --accent-color: #D0D066;
    --background-color: #333;
    --text-color: white;
    --button-text-color: #eee;
    --transition-delay: 1s;

}


.title {
    margin: 0;
    margin-bottom: .5rem;
    text-transform: capitalize;
}

.theme_toggle_btn {
    background-color: var( --accent-color);
    color: var( --button-text-color);

    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    padding: .5rem 1rem;
    border-radius: .3em;
    border: none;
    outline: none;
    transition: var( --transition-delay);
    transform: scale(1);
}


.theme_toggle_btn .btn__icon{
    margin-right: .5em;
}


/* the pesudo:class and peseudo::element
+ peseudo:class acts as a class what is added to the already existed. it is :hover and :focus

+peseudo::element acts as adding new element to the HTML file, what is not existed yet.*/

.theme_toggle_btn:hover,
.theme_toggle_btn:focus {
    transform: scale( 1.1);
}


.sun_moon_container {
    --rotation: 0deg;
    position: absolute;
    top: 0;
    /* this  property sets under what circumstances(situations) a particule graphic element CAN BECOME THE TARGETS OF THE POINTER EVENTS */
    pointer-events: none;
    height: 200vmin;
    /* if the height <  width => 1vmin = 1vh. 
       if the width  < height => 1vmin = 1vw */ 
    transform: rotate( var( --rotation));


    display: flex;
    align-items: center;
    justify-content: center;
    transition: transform var( --transition-delay);
}
 
.dark .sun_moon_container {
    --rotation: 180deg;
}

.icon__sun,
.icon__moon {
    position: absolute;

    transition: all  var( --transition-delay) ease;
    width: 30px;
    height: 30px;
    fill: var( --accent-color) ;
}

.icon__sun {
    top: 5%;
}

.icon__moon {
    bottom: 5%;
    opacity: 0;
}

.dark .icon__sun {
    /* top: 90%; */
    opacity: 0;
}

.dark .icon__moon {
    top: 5%;
    opacity: 1;
}


